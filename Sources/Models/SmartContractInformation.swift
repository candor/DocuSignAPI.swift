//
// SmartContractInformation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Vapor

/**  */
public final class SmartContractInformation: Content {
    /**  */
    public var code: String?
    /** A URI containing the user ID. */
    public var uri: String?

    public init(code: String? = nil, uri: String? = nil) {
        self.code = code
        self.uri = uri
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case uri
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(uri, forKey: .uri)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        code = try container.decodeIfPresent(String.self, forKey: .code)
        uri = try container.decodeIfPresent(String.self, forKey: .uri)
    }
}

extension SmartContractInformation: Hashable {
    public static func == (lhs: SmartContractInformation, rhs: SmartContractInformation) -> Bool {
        lhs.code == rhs.code &&
            lhs.uri == rhs.uri
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(code?.hashValue)
        hasher.combine(uri?.hashValue)
    }
}
