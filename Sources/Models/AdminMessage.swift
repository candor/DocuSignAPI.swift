//
// AdminMessage.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Vapor

/**  */
public final class AdminMessage: Content {
    /**  */
    public var baseMessage: String?
    /**  */
    public var moreInformation: String?

    public init(baseMessage: String? = nil, moreInformation: String? = nil) {
        self.baseMessage = baseMessage
        self.moreInformation = moreInformation
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case baseMessage
        case moreInformation
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(baseMessage, forKey: .baseMessage)
        try container.encodeIfPresent(moreInformation, forKey: .moreInformation)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        baseMessage = try container.decodeIfPresent(String.self, forKey: .baseMessage)
        moreInformation = try container.decodeIfPresent(String.self, forKey: .moreInformation)
    }
}

extension AdminMessage: Hashable {
    public static func == (lhs: AdminMessage, rhs: AdminMessage) -> Bool {
        lhs.baseMessage == rhs.baseMessage &&
            lhs.moreInformation == rhs.moreInformation
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(baseMessage?.hashValue)
        hasher.combine(moreInformation?.hashValue)
    }
}
