//
// PageRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Vapor

/**  */
public final class PageRequest: Content {
    /** The user's encrypted password hash. */
    public var password: String?
    /** Sets the direction the page image is rotated. The possible settings are: left or right */
    public var rotate: String?

    public init(password: String? = nil, rotate: String? = nil) {
        self.password = password
        self.rotate = rotate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case password
        case rotate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(password, forKey: .password)
        try container.encodeIfPresent(rotate, forKey: .rotate)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        password = try container.decodeIfPresent(String.self, forKey: .password)
        rotate = try container.decodeIfPresent(String.self, forKey: .rotate)
    }
}

extension PageRequest: Hashable {
    public static func == (lhs: PageRequest, rhs: PageRequest) -> Bool {
        lhs.password == rhs.password &&
            lhs.rotate == rhs.rotate
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(password?.hashValue)
        hasher.combine(rotate?.hashValue)
    }
}
