//
// AccountPasswordMinimumPasswordAgeDays.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Vapor

/**  */
public final class AccountPasswordMinimumPasswordAgeDays: Content {
    /**  */
    public var maximumAge: String?
    /**  */
    public var minimumAge: String?

    public init(maximumAge: String? = nil, minimumAge: String? = nil) {
        self.maximumAge = maximumAge
        self.minimumAge = minimumAge
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case maximumAge
        case minimumAge
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(maximumAge, forKey: .maximumAge)
        try container.encodeIfPresent(minimumAge, forKey: .minimumAge)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        maximumAge = try container.decodeIfPresent(String.self, forKey: .maximumAge)
        minimumAge = try container.decodeIfPresent(String.self, forKey: .minimumAge)
    }
}

extension AccountPasswordMinimumPasswordAgeDays: Hashable {
    public static func == (lhs: AccountPasswordMinimumPasswordAgeDays, rhs: AccountPasswordMinimumPasswordAgeDays) -> Bool {
        lhs.maximumAge == rhs.maximumAge &&
            lhs.minimumAge == rhs.minimumAge
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(maximumAge?.hashValue)
        hasher.combine(minimumAge?.hashValue)
    }
}
