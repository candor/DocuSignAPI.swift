//
// EnvelopeAuditEventResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class EnvelopeAuditEventResponse: Content, Hashable {
    /** Reserved: TBD */
    public var auditEvents: [EnvelopeAuditEvent]?

    public init(auditEvents: [EnvelopeAuditEvent]? = nil) {
        self.auditEvents = auditEvents
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case auditEvents
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(auditEvents, forKey: .auditEvents)
    }

    public static func == (lhs: EnvelopeAuditEventResponse, rhs: EnvelopeAuditEventResponse) -> Bool {
        lhs.auditEvents == rhs.auditEvents
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(auditEvents?.hashValue)
    }
}
