//
// ConnectEventData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class ConnectEventData: Content, Hashable {
    /**  */
    public var format: String?
    /**  */
    public var includeData: [String]?
    /** The version of the rest API. */
    public var version: String?

    public init(format: String? = nil, includeData: [String]? = nil, version: String? = nil) {
        self.format = format
        self.includeData = includeData
        self.version = version
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case format
        case includeData
        case version
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(format, forKey: .format)
        try container.encodeIfPresent(includeData, forKey: .includeData)
        try container.encodeIfPresent(version, forKey: .version)
    }

    public static func == (lhs: ConnectEventData, rhs: ConnectEventData) -> Bool {
        lhs.format == rhs.format &&
            lhs.includeData == rhs.includeData &&
            lhs.version == rhs.version
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(format?.hashValue)
        hasher.combine(includeData?.hashValue)
        hasher.combine(version?.hashValue)
    }
}
