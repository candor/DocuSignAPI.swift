//
// CommentsPublish.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class CommentsPublish: Content, Hashable {
    /**  */
    public var commentsToPublish: [CommentPublish]?

    public init(commentsToPublish: [CommentPublish]? = nil) {
        self.commentsToPublish = commentsToPublish
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case commentsToPublish
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(commentsToPublish, forKey: .commentsToPublish)
    }

    public static func == (lhs: CommentsPublish, rhs: CommentsPublish) -> Bool {
        lhs.commentsToPublish == rhs.commentsToPublish
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(commentsToPublish?.hashValue)
    }
}
