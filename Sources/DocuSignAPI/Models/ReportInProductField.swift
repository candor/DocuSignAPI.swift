//
// ReportInProductField.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class ReportInProductField: Content, Hashable {
    /** The position on the page where the display section appears. */
    public var displayOrder: String?
    /**  */
    public var fieldVersion: String?
    /**  */
    public var name: String?
    /** When set to **true**, the radio button is selected. */
    public var selected: String?

    public init(displayOrder: String? = nil, fieldVersion: String? = nil, name: String? = nil, selected: String? = nil) {
        self.displayOrder = displayOrder
        self.fieldVersion = fieldVersion
        self.name = name
        self.selected = selected
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case displayOrder
        case fieldVersion
        case name
        case selected
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(displayOrder, forKey: .displayOrder)
        try container.encodeIfPresent(fieldVersion, forKey: .fieldVersion)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(selected, forKey: .selected)
    }

    public static func == (lhs: ReportInProductField, rhs: ReportInProductField) -> Bool {
        lhs.displayOrder == rhs.displayOrder &&
            lhs.fieldVersion == rhs.fieldVersion &&
            lhs.name == rhs.name &&
            lhs.selected == rhs.selected
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(displayOrder?.hashValue)
        hasher.combine(fieldVersion?.hashValue)
        hasher.combine(name?.hashValue)
        hasher.combine(selected?.hashValue)
    }
}
