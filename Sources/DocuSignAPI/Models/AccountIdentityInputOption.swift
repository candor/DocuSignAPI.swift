//
// AccountIdentityInputOption.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class AccountIdentityInputOption: Content, Hashable {
    /**  */
    public var isRequired: Bool?
    /**  */
    public var optionName: String?
    /**  */
    public var valueType: String?

    public init(isRequired: Bool? = nil, optionName: String? = nil, valueType: String? = nil) {
        self.isRequired = isRequired
        self.optionName = optionName
        self.valueType = valueType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case isRequired
        case optionName
        case valueType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(isRequired, forKey: .isRequired)
        try container.encodeIfPresent(optionName, forKey: .optionName)
        try container.encodeIfPresent(valueType, forKey: .valueType)
    }

    public static func == (lhs: AccountIdentityInputOption, rhs: AccountIdentityInputOption) -> Bool {
        lhs.isRequired == rhs.isRequired &&
            lhs.optionName == rhs.optionName &&
            lhs.valueType == rhs.valueType
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(isRequired?.hashValue)
        hasher.combine(optionName?.hashValue)
        hasher.combine(valueType?.hashValue)
    }
}
