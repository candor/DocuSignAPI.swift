//
// RecipientEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class RecipientEvent: Content, Hashable {
    /** reserved */
    public var includeDocuments: String?
    /** Send a webhook notification for the following recipient statuses: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded. */
    public var recipientEventStatusCode: String?

    public init(includeDocuments: String? = nil, recipientEventStatusCode: String? = nil) {
        self.includeDocuments = includeDocuments
        self.recipientEventStatusCode = recipientEventStatusCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case includeDocuments
        case recipientEventStatusCode
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(includeDocuments, forKey: .includeDocuments)
        try container.encodeIfPresent(recipientEventStatusCode, forKey: .recipientEventStatusCode)
    }

    public static func == (lhs: RecipientEvent, rhs: RecipientEvent) -> Bool {
        lhs.includeDocuments == rhs.includeDocuments &&
            lhs.recipientEventStatusCode == rhs.recipientEventStatusCode
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(includeDocuments?.hashValue)
        hasher.combine(recipientEventStatusCode?.hashValue)
    }
}
