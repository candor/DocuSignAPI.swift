//
// AccountRoleSettings.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/** This object defines account permissions for users who are associated with the account permission profile.  */
public final class AccountRoleSettings: Content, Hashable {
    /** When **true**, users have full administrative access to the account. */
    public var allowAccountManagement: String?
    public var allowAccountManagementMetadata: SettingsMetadata?
    /** When **true**, users can manage documents by using the API. */
    public var allowApiAccess: String?
    public var allowApiAccessMetadata: SettingsMetadata?
    /** When **true**, users can access the account by using the eSignature API. */
    public var allowApiAccessToAccount: String?
    public var allowApiAccessToAccountMetadata: SettingsMetadata?
    /** When **true**, users can send envelopes on behalf of others. */
    public var allowApiSendingOnBehalfOfOthers: String?
    public var allowApiSendingOnBehalfOfOthersMetadata: SettingsMetadata?
    /** When **true**, users may specify sequential signing recipients when they send documents by using the API. */
    public var allowApiSequentialSigning: String?
    public var allowApiSequentialSigningMetadata: SettingsMetadata?
    /**  If **true**, auto-tagging is enabled for the account. */
    public var allowAutoTagging: String?
    public var allowAutoTaggingMetadata: SettingsMetadata?
    /** When **true**, bulk sending is enabled for users. */
    public var allowBulkSending: String?
    public var allowBulkSendingMetadata: SettingsMetadata?
    /** When **true**, the DocuSign Desktop Client is enabled for users.  */
    public var allowDocuSignDesktopClient: String?
    public var allowDocuSignDesktopClientMetadata: SettingsMetadata?
    /** Specifies the level of access that users have to the account's address book. Valid values are:  - `personal` - `useShared` - `usePersonalAndShared` - `personalAndShared`  */
    public var allowedAddressBookAccess: String?
    public var allowedAddressBookAccessMetadata: SettingsMetadata?
    /**  */
    public var allowedClickwrapsAccess: String?
    public var allowedClickwrapsAccessMetadata: SettingsMetadata?
    /** Specifies the level of access that users have to account templates. Valid values are:   - `none`  - `use` - `create` - `share` */
    public var allowedTemplateAccess: String?
    public var allowedTemplateAccessMetadata: SettingsMetadata?
    /** When **true**, users can be recipients of envelopes transferred to them by administrators of other accounts.  */
    public var allowedToBeEnvelopeTransferRecipient: String?
    public var allowedToBeEnvelopeTransferRecipientMetadata: SettingsMetadata?
    /** When **true**, users can send envelopes. */
    public var allowEnvelopeSending: String?
    public var allowEnvelopeSendingMetadata: SettingsMetadata?
    /** When **true**, users can add electronic seal ([eSeal](https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals)) recipients. */
    public var allowESealRecipients: String?
    public var allowESealRecipientsMetadata: SettingsMetadata?
    /** When **true**, PowerForm Administrators can access all of the PowerForm envelopes associated with the account. */
    public var allowPowerFormsAdminToAccessAllPowerFormEnvelopes: String?
    public var allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata: SettingsMetadata?
    /** When **true**, senders can set the language of the email that is sent to recipients. */
    public var allowSendersToSetRecipientEmailLanguage: String?
    public var allowSendersToSetRecipientEmailLanguageMetadata: SettingsMetadata?
    /** When **true**, users can add requests for attachments from signers. */
    public var allowSignerAttachments: String?
    public var allowSignerAttachmentsMetadata: SettingsMetadata?
    /** When **true**, senders can include supplemental documents. */
    public var allowSupplementalDocuments: String?
    public var allowSupplementalDocumentsMetadata: SettingsMetadata?
    /** When **true**, the tagger palette is visible during the sending and correct flows and users can add tabs to documents. */
    public var allowTaggingInSendAndCorrect: String?
    public var allowTaggingInSendAndCorrectMetadata: SettingsMetadata?
    /** Reserved for DocuSign. */
    public var allowVaulting: String?
    public var allowVaultingMetadata: SettingsMetadata?
    /** When **true**, users can override the default account setting that controls whether recipients can sign documents on paper. The option to overrride this setting occurs during the sending process on a per-envelope basis. */
    public var allowWetSigningOverride: String?
    public var allowWetSigningOverrideMetadata: SettingsMetadata?
    /** Reserved for DocuSign. */
    public var canCreateWorkspaces: String?
    public var canCreateWorkspacesMetadata: SettingsMetadata?
    /** When **true**, users cannot upload documents. */
    public var disableDocumentUpload: String?
    public var disableDocumentUploadMetadata: SettingsMetadata?
    /** When **true**, users can access the **Other Actions** menu. */
    public var disableOtherActions: String?
    public var disableOtherActionsMetadata: SettingsMetadata?
    /** When **true**, API request logging is enabled.  **Note**: Logging limits apply. */
    public var enableApiRequestLogging: String?
    public var enableApiRequestLoggingMetadata: SettingsMetadata?
    /** When **true**, senders are notified when recipients view the documents that they send. */
    public var enableRecipientViewingNotifications: String?
    public var enableRecipientViewingNotificationsMetadata: SettingsMetadata?
    /** When **true**, the sequential signing user interface is enabled. */
    public var enableSequentialSigningInterface: String?
    public var enableSequentialSigningInterfaceMetadata: SettingsMetadata?
    /** Reserved for DocuSign. */
    public var enableTransactionPointIntegration: String?
    public var enableTransactionPointIntegrationMetadata: SettingsMetadata?
    /** The PowerForms rights associated with the account permission profile. Valid values are:  - `none`  - `user`  - `admin`  */
    public var powerFormRole: String?
    public var powerFormRoleMetadata: SettingsMetadata?
    /** When **true**, senders receive emails about completed, self-signed documents that contain links to the completed documents instead of PDF attachments. */
    public var receiveCompletedSelfSignedDocumentsAsEmailLinks: String?
    public var receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata: SettingsMetadata?
    public var signingUiVersionMetadata: SettingsMetadata?
    /** When **true**, senders can require recipients to accept supplemental documents. */
    public var supplementalDocumentsMustAccept: String?
    public var supplementalDocumentsMustAcceptMetadata: SettingsMetadata?
    /** When **true**, senders can require recipients to read supplemental documents. */
    public var supplementalDocumentsMustRead: String?
    public var supplementalDocumentsMustReadMetadata: SettingsMetadata?
    /** When **true**, users can require recipients to view supplemental documents. */
    public var supplementalDocumentsMustView: String?
    public var supplementalDocumentsMustViewMetadata: SettingsMetadata?
    /** Reserved for DocuSign. */
    public var useNewDocuSignExperienceInterface: String?
    public var useNewDocuSignExperienceInterfaceMetadata: SettingsMetadata?
    /** Reserved for DocuSign. */
    public var useNewSendingInterface: String?
    public var useNewSendingInterfaceMetadata: SettingsMetadata?
    /** Reserved for DocuSign. */
    public var vaultingMode: String?
    public var vaultingModeMetadata: SettingsMetadata?

    public init(allowAccountManagement: String? = nil, allowAccountManagementMetadata: SettingsMetadata? = nil, allowApiAccess: String? = nil, allowApiAccessMetadata: SettingsMetadata? = nil, allowApiAccessToAccount: String? = nil, allowApiAccessToAccountMetadata: SettingsMetadata? = nil, allowApiSendingOnBehalfOfOthers: String? = nil, allowApiSendingOnBehalfOfOthersMetadata: SettingsMetadata? = nil, allowApiSequentialSigning: String? = nil, allowApiSequentialSigningMetadata: SettingsMetadata? = nil, allowAutoTagging: String? = nil, allowAutoTaggingMetadata: SettingsMetadata? = nil, allowBulkSending: String? = nil, allowBulkSendingMetadata: SettingsMetadata? = nil, allowDocuSignDesktopClient: String? = nil, allowDocuSignDesktopClientMetadata: SettingsMetadata? = nil, allowedAddressBookAccess: String? = nil, allowedAddressBookAccessMetadata: SettingsMetadata? = nil, allowedClickwrapsAccess: String? = nil, allowedClickwrapsAccessMetadata: SettingsMetadata? = nil, allowedTemplateAccess: String? = nil, allowedTemplateAccessMetadata: SettingsMetadata? = nil, allowedToBeEnvelopeTransferRecipient: String? = nil, allowedToBeEnvelopeTransferRecipientMetadata: SettingsMetadata? = nil, allowEnvelopeSending: String? = nil, allowEnvelopeSendingMetadata: SettingsMetadata? = nil, allowESealRecipients: String? = nil, allowESealRecipientsMetadata: SettingsMetadata? = nil, allowPowerFormsAdminToAccessAllPowerFormEnvelopes: String? = nil, allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata: SettingsMetadata? = nil, allowSendersToSetRecipientEmailLanguage: String? = nil, allowSendersToSetRecipientEmailLanguageMetadata: SettingsMetadata? = nil, allowSignerAttachments: String? = nil, allowSignerAttachmentsMetadata: SettingsMetadata? = nil, allowSupplementalDocuments: String? = nil, allowSupplementalDocumentsMetadata: SettingsMetadata? = nil, allowTaggingInSendAndCorrect: String? = nil, allowTaggingInSendAndCorrectMetadata: SettingsMetadata? = nil, allowVaulting: String? = nil, allowVaultingMetadata: SettingsMetadata? = nil, allowWetSigningOverride: String? = nil, allowWetSigningOverrideMetadata: SettingsMetadata? = nil, canCreateWorkspaces: String? = nil, canCreateWorkspacesMetadata: SettingsMetadata? = nil, disableDocumentUpload: String? = nil, disableDocumentUploadMetadata: SettingsMetadata? = nil, disableOtherActions: String? = nil, disableOtherActionsMetadata: SettingsMetadata? = nil, enableApiRequestLogging: String? = nil, enableApiRequestLoggingMetadata: SettingsMetadata? = nil, enableRecipientViewingNotifications: String? = nil, enableRecipientViewingNotificationsMetadata: SettingsMetadata? = nil, enableSequentialSigningInterface: String? = nil, enableSequentialSigningInterfaceMetadata: SettingsMetadata? = nil, enableTransactionPointIntegration: String? = nil, enableTransactionPointIntegrationMetadata: SettingsMetadata? = nil, powerFormRole: String? = nil, powerFormRoleMetadata: SettingsMetadata? = nil, receiveCompletedSelfSignedDocumentsAsEmailLinks: String? = nil, receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata: SettingsMetadata? = nil, signingUiVersionMetadata: SettingsMetadata? = nil, supplementalDocumentsMustAccept: String? = nil, supplementalDocumentsMustAcceptMetadata: SettingsMetadata? = nil, supplementalDocumentsMustRead: String? = nil, supplementalDocumentsMustReadMetadata: SettingsMetadata? = nil, supplementalDocumentsMustView: String? = nil, supplementalDocumentsMustViewMetadata: SettingsMetadata? = nil, useNewDocuSignExperienceInterface: String? = nil, useNewDocuSignExperienceInterfaceMetadata: SettingsMetadata? = nil, useNewSendingInterface: String? = nil, useNewSendingInterfaceMetadata: SettingsMetadata? = nil, vaultingMode: String? = nil, vaultingModeMetadata: SettingsMetadata? = nil) {
        self.allowAccountManagement = allowAccountManagement
        self.allowAccountManagementMetadata = allowAccountManagementMetadata
        self.allowApiAccess = allowApiAccess
        self.allowApiAccessMetadata = allowApiAccessMetadata
        self.allowApiAccessToAccount = allowApiAccessToAccount
        self.allowApiAccessToAccountMetadata = allowApiAccessToAccountMetadata
        self.allowApiSendingOnBehalfOfOthers = allowApiSendingOnBehalfOfOthers
        self.allowApiSendingOnBehalfOfOthersMetadata = allowApiSendingOnBehalfOfOthersMetadata
        self.allowApiSequentialSigning = allowApiSequentialSigning
        self.allowApiSequentialSigningMetadata = allowApiSequentialSigningMetadata
        self.allowAutoTagging = allowAutoTagging
        self.allowAutoTaggingMetadata = allowAutoTaggingMetadata
        self.allowBulkSending = allowBulkSending
        self.allowBulkSendingMetadata = allowBulkSendingMetadata
        self.allowDocuSignDesktopClient = allowDocuSignDesktopClient
        self.allowDocuSignDesktopClientMetadata = allowDocuSignDesktopClientMetadata
        self.allowedAddressBookAccess = allowedAddressBookAccess
        self.allowedAddressBookAccessMetadata = allowedAddressBookAccessMetadata
        self.allowedClickwrapsAccess = allowedClickwrapsAccess
        self.allowedClickwrapsAccessMetadata = allowedClickwrapsAccessMetadata
        self.allowedTemplateAccess = allowedTemplateAccess
        self.allowedTemplateAccessMetadata = allowedTemplateAccessMetadata
        self.allowedToBeEnvelopeTransferRecipient = allowedToBeEnvelopeTransferRecipient
        self.allowedToBeEnvelopeTransferRecipientMetadata = allowedToBeEnvelopeTransferRecipientMetadata
        self.allowEnvelopeSending = allowEnvelopeSending
        self.allowEnvelopeSendingMetadata = allowEnvelopeSendingMetadata
        self.allowESealRecipients = allowESealRecipients
        self.allowESealRecipientsMetadata = allowESealRecipientsMetadata
        self.allowPowerFormsAdminToAccessAllPowerFormEnvelopes = allowPowerFormsAdminToAccessAllPowerFormEnvelopes
        self.allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata = allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata
        self.allowSendersToSetRecipientEmailLanguage = allowSendersToSetRecipientEmailLanguage
        self.allowSendersToSetRecipientEmailLanguageMetadata = allowSendersToSetRecipientEmailLanguageMetadata
        self.allowSignerAttachments = allowSignerAttachments
        self.allowSignerAttachmentsMetadata = allowSignerAttachmentsMetadata
        self.allowSupplementalDocuments = allowSupplementalDocuments
        self.allowSupplementalDocumentsMetadata = allowSupplementalDocumentsMetadata
        self.allowTaggingInSendAndCorrect = allowTaggingInSendAndCorrect
        self.allowTaggingInSendAndCorrectMetadata = allowTaggingInSendAndCorrectMetadata
        self.allowVaulting = allowVaulting
        self.allowVaultingMetadata = allowVaultingMetadata
        self.allowWetSigningOverride = allowWetSigningOverride
        self.allowWetSigningOverrideMetadata = allowWetSigningOverrideMetadata
        self.canCreateWorkspaces = canCreateWorkspaces
        self.canCreateWorkspacesMetadata = canCreateWorkspacesMetadata
        self.disableDocumentUpload = disableDocumentUpload
        self.disableDocumentUploadMetadata = disableDocumentUploadMetadata
        self.disableOtherActions = disableOtherActions
        self.disableOtherActionsMetadata = disableOtherActionsMetadata
        self.enableApiRequestLogging = enableApiRequestLogging
        self.enableApiRequestLoggingMetadata = enableApiRequestLoggingMetadata
        self.enableRecipientViewingNotifications = enableRecipientViewingNotifications
        self.enableRecipientViewingNotificationsMetadata = enableRecipientViewingNotificationsMetadata
        self.enableSequentialSigningInterface = enableSequentialSigningInterface
        self.enableSequentialSigningInterfaceMetadata = enableSequentialSigningInterfaceMetadata
        self.enableTransactionPointIntegration = enableTransactionPointIntegration
        self.enableTransactionPointIntegrationMetadata = enableTransactionPointIntegrationMetadata
        self.powerFormRole = powerFormRole
        self.powerFormRoleMetadata = powerFormRoleMetadata
        self.receiveCompletedSelfSignedDocumentsAsEmailLinks = receiveCompletedSelfSignedDocumentsAsEmailLinks
        self.receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata = receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata
        self.signingUiVersionMetadata = signingUiVersionMetadata
        self.supplementalDocumentsMustAccept = supplementalDocumentsMustAccept
        self.supplementalDocumentsMustAcceptMetadata = supplementalDocumentsMustAcceptMetadata
        self.supplementalDocumentsMustRead = supplementalDocumentsMustRead
        self.supplementalDocumentsMustReadMetadata = supplementalDocumentsMustReadMetadata
        self.supplementalDocumentsMustView = supplementalDocumentsMustView
        self.supplementalDocumentsMustViewMetadata = supplementalDocumentsMustViewMetadata
        self.useNewDocuSignExperienceInterface = useNewDocuSignExperienceInterface
        self.useNewDocuSignExperienceInterfaceMetadata = useNewDocuSignExperienceInterfaceMetadata
        self.useNewSendingInterface = useNewSendingInterface
        self.useNewSendingInterfaceMetadata = useNewSendingInterfaceMetadata
        self.vaultingMode = vaultingMode
        self.vaultingModeMetadata = vaultingModeMetadata
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case allowAccountManagement
        case allowAccountManagementMetadata
        case allowApiAccess
        case allowApiAccessMetadata
        case allowApiAccessToAccount
        case allowApiAccessToAccountMetadata
        case allowApiSendingOnBehalfOfOthers
        case allowApiSendingOnBehalfOfOthersMetadata
        case allowApiSequentialSigning
        case allowApiSequentialSigningMetadata
        case allowAutoTagging
        case allowAutoTaggingMetadata
        case allowBulkSending
        case allowBulkSendingMetadata
        case allowDocuSignDesktopClient
        case allowDocuSignDesktopClientMetadata
        case allowedAddressBookAccess
        case allowedAddressBookAccessMetadata
        case allowedClickwrapsAccess
        case allowedClickwrapsAccessMetadata
        case allowedTemplateAccess
        case allowedTemplateAccessMetadata
        case allowedToBeEnvelopeTransferRecipient
        case allowedToBeEnvelopeTransferRecipientMetadata
        case allowEnvelopeSending
        case allowEnvelopeSendingMetadata
        case allowESealRecipients
        case allowESealRecipientsMetadata
        case allowPowerFormsAdminToAccessAllPowerFormEnvelopes
        case allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata
        case allowSendersToSetRecipientEmailLanguage
        case allowSendersToSetRecipientEmailLanguageMetadata
        case allowSignerAttachments
        case allowSignerAttachmentsMetadata
        case allowSupplementalDocuments
        case allowSupplementalDocumentsMetadata
        case allowTaggingInSendAndCorrect
        case allowTaggingInSendAndCorrectMetadata
        case allowVaulting
        case allowVaultingMetadata
        case allowWetSigningOverride
        case allowWetSigningOverrideMetadata
        case canCreateWorkspaces
        case canCreateWorkspacesMetadata
        case disableDocumentUpload
        case disableDocumentUploadMetadata
        case disableOtherActions
        case disableOtherActionsMetadata
        case enableApiRequestLogging
        case enableApiRequestLoggingMetadata
        case enableRecipientViewingNotifications
        case enableRecipientViewingNotificationsMetadata
        case enableSequentialSigningInterface
        case enableSequentialSigningInterfaceMetadata
        case enableTransactionPointIntegration
        case enableTransactionPointIntegrationMetadata
        case powerFormRole
        case powerFormRoleMetadata
        case receiveCompletedSelfSignedDocumentsAsEmailLinks
        case receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata
        case signingUiVersionMetadata
        case supplementalDocumentsMustAccept
        case supplementalDocumentsMustAcceptMetadata
        case supplementalDocumentsMustRead
        case supplementalDocumentsMustReadMetadata
        case supplementalDocumentsMustView
        case supplementalDocumentsMustViewMetadata
        case useNewDocuSignExperienceInterface
        case useNewDocuSignExperienceInterfaceMetadata
        case useNewSendingInterface
        case useNewSendingInterfaceMetadata
        case vaultingMode
        case vaultingModeMetadata
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(allowAccountManagement, forKey: .allowAccountManagement)
        try container.encodeIfPresent(allowAccountManagementMetadata, forKey: .allowAccountManagementMetadata)
        try container.encodeIfPresent(allowApiAccess, forKey: .allowApiAccess)
        try container.encodeIfPresent(allowApiAccessMetadata, forKey: .allowApiAccessMetadata)
        try container.encodeIfPresent(allowApiAccessToAccount, forKey: .allowApiAccessToAccount)
        try container.encodeIfPresent(allowApiAccessToAccountMetadata, forKey: .allowApiAccessToAccountMetadata)
        try container.encodeIfPresent(allowApiSendingOnBehalfOfOthers, forKey: .allowApiSendingOnBehalfOfOthers)
        try container.encodeIfPresent(allowApiSendingOnBehalfOfOthersMetadata, forKey: .allowApiSendingOnBehalfOfOthersMetadata)
        try container.encodeIfPresent(allowApiSequentialSigning, forKey: .allowApiSequentialSigning)
        try container.encodeIfPresent(allowApiSequentialSigningMetadata, forKey: .allowApiSequentialSigningMetadata)
        try container.encodeIfPresent(allowAutoTagging, forKey: .allowAutoTagging)
        try container.encodeIfPresent(allowAutoTaggingMetadata, forKey: .allowAutoTaggingMetadata)
        try container.encodeIfPresent(allowBulkSending, forKey: .allowBulkSending)
        try container.encodeIfPresent(allowBulkSendingMetadata, forKey: .allowBulkSendingMetadata)
        try container.encodeIfPresent(allowDocuSignDesktopClient, forKey: .allowDocuSignDesktopClient)
        try container.encodeIfPresent(allowDocuSignDesktopClientMetadata, forKey: .allowDocuSignDesktopClientMetadata)
        try container.encodeIfPresent(allowedAddressBookAccess, forKey: .allowedAddressBookAccess)
        try container.encodeIfPresent(allowedAddressBookAccessMetadata, forKey: .allowedAddressBookAccessMetadata)
        try container.encodeIfPresent(allowedClickwrapsAccess, forKey: .allowedClickwrapsAccess)
        try container.encodeIfPresent(allowedClickwrapsAccessMetadata, forKey: .allowedClickwrapsAccessMetadata)
        try container.encodeIfPresent(allowedTemplateAccess, forKey: .allowedTemplateAccess)
        try container.encodeIfPresent(allowedTemplateAccessMetadata, forKey: .allowedTemplateAccessMetadata)
        try container.encodeIfPresent(allowedToBeEnvelopeTransferRecipient, forKey: .allowedToBeEnvelopeTransferRecipient)
        try container.encodeIfPresent(allowedToBeEnvelopeTransferRecipientMetadata, forKey: .allowedToBeEnvelopeTransferRecipientMetadata)
        try container.encodeIfPresent(allowEnvelopeSending, forKey: .allowEnvelopeSending)
        try container.encodeIfPresent(allowEnvelopeSendingMetadata, forKey: .allowEnvelopeSendingMetadata)
        try container.encodeIfPresent(allowESealRecipients, forKey: .allowESealRecipients)
        try container.encodeIfPresent(allowESealRecipientsMetadata, forKey: .allowESealRecipientsMetadata)
        try container.encodeIfPresent(allowPowerFormsAdminToAccessAllPowerFormEnvelopes, forKey: .allowPowerFormsAdminToAccessAllPowerFormEnvelopes)
        try container.encodeIfPresent(allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata, forKey: .allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata)
        try container.encodeIfPresent(allowSendersToSetRecipientEmailLanguage, forKey: .allowSendersToSetRecipientEmailLanguage)
        try container.encodeIfPresent(allowSendersToSetRecipientEmailLanguageMetadata, forKey: .allowSendersToSetRecipientEmailLanguageMetadata)
        try container.encodeIfPresent(allowSignerAttachments, forKey: .allowSignerAttachments)
        try container.encodeIfPresent(allowSignerAttachmentsMetadata, forKey: .allowSignerAttachmentsMetadata)
        try container.encodeIfPresent(allowSupplementalDocuments, forKey: .allowSupplementalDocuments)
        try container.encodeIfPresent(allowSupplementalDocumentsMetadata, forKey: .allowSupplementalDocumentsMetadata)
        try container.encodeIfPresent(allowTaggingInSendAndCorrect, forKey: .allowTaggingInSendAndCorrect)
        try container.encodeIfPresent(allowTaggingInSendAndCorrectMetadata, forKey: .allowTaggingInSendAndCorrectMetadata)
        try container.encodeIfPresent(allowVaulting, forKey: .allowVaulting)
        try container.encodeIfPresent(allowVaultingMetadata, forKey: .allowVaultingMetadata)
        try container.encodeIfPresent(allowWetSigningOverride, forKey: .allowWetSigningOverride)
        try container.encodeIfPresent(allowWetSigningOverrideMetadata, forKey: .allowWetSigningOverrideMetadata)
        try container.encodeIfPresent(canCreateWorkspaces, forKey: .canCreateWorkspaces)
        try container.encodeIfPresent(canCreateWorkspacesMetadata, forKey: .canCreateWorkspacesMetadata)
        try container.encodeIfPresent(disableDocumentUpload, forKey: .disableDocumentUpload)
        try container.encodeIfPresent(disableDocumentUploadMetadata, forKey: .disableDocumentUploadMetadata)
        try container.encodeIfPresent(disableOtherActions, forKey: .disableOtherActions)
        try container.encodeIfPresent(disableOtherActionsMetadata, forKey: .disableOtherActionsMetadata)
        try container.encodeIfPresent(enableApiRequestLogging, forKey: .enableApiRequestLogging)
        try container.encodeIfPresent(enableApiRequestLoggingMetadata, forKey: .enableApiRequestLoggingMetadata)
        try container.encodeIfPresent(enableRecipientViewingNotifications, forKey: .enableRecipientViewingNotifications)
        try container.encodeIfPresent(enableRecipientViewingNotificationsMetadata, forKey: .enableRecipientViewingNotificationsMetadata)
        try container.encodeIfPresent(enableSequentialSigningInterface, forKey: .enableSequentialSigningInterface)
        try container.encodeIfPresent(enableSequentialSigningInterfaceMetadata, forKey: .enableSequentialSigningInterfaceMetadata)
        try container.encodeIfPresent(enableTransactionPointIntegration, forKey: .enableTransactionPointIntegration)
        try container.encodeIfPresent(enableTransactionPointIntegrationMetadata, forKey: .enableTransactionPointIntegrationMetadata)
        try container.encodeIfPresent(powerFormRole, forKey: .powerFormRole)
        try container.encodeIfPresent(powerFormRoleMetadata, forKey: .powerFormRoleMetadata)
        try container.encodeIfPresent(receiveCompletedSelfSignedDocumentsAsEmailLinks, forKey: .receiveCompletedSelfSignedDocumentsAsEmailLinks)
        try container.encodeIfPresent(receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata, forKey: .receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata)
        try container.encodeIfPresent(signingUiVersionMetadata, forKey: .signingUiVersionMetadata)
        try container.encodeIfPresent(supplementalDocumentsMustAccept, forKey: .supplementalDocumentsMustAccept)
        try container.encodeIfPresent(supplementalDocumentsMustAcceptMetadata, forKey: .supplementalDocumentsMustAcceptMetadata)
        try container.encodeIfPresent(supplementalDocumentsMustRead, forKey: .supplementalDocumentsMustRead)
        try container.encodeIfPresent(supplementalDocumentsMustReadMetadata, forKey: .supplementalDocumentsMustReadMetadata)
        try container.encodeIfPresent(supplementalDocumentsMustView, forKey: .supplementalDocumentsMustView)
        try container.encodeIfPresent(supplementalDocumentsMustViewMetadata, forKey: .supplementalDocumentsMustViewMetadata)
        try container.encodeIfPresent(useNewDocuSignExperienceInterface, forKey: .useNewDocuSignExperienceInterface)
        try container.encodeIfPresent(useNewDocuSignExperienceInterfaceMetadata, forKey: .useNewDocuSignExperienceInterfaceMetadata)
        try container.encodeIfPresent(useNewSendingInterface, forKey: .useNewSendingInterface)
        try container.encodeIfPresent(useNewSendingInterfaceMetadata, forKey: .useNewSendingInterfaceMetadata)
        try container.encodeIfPresent(vaultingMode, forKey: .vaultingMode)
        try container.encodeIfPresent(vaultingModeMetadata, forKey: .vaultingModeMetadata)
    }

    public static func == (lhs: AccountRoleSettings, rhs: AccountRoleSettings) -> Bool {
        lhs.allowAccountManagement == rhs.allowAccountManagement &&
            lhs.allowAccountManagementMetadata == rhs.allowAccountManagementMetadata &&
            lhs.allowApiAccess == rhs.allowApiAccess &&
            lhs.allowApiAccessMetadata == rhs.allowApiAccessMetadata &&
            lhs.allowApiAccessToAccount == rhs.allowApiAccessToAccount &&
            lhs.allowApiAccessToAccountMetadata == rhs.allowApiAccessToAccountMetadata &&
            lhs.allowApiSendingOnBehalfOfOthers == rhs.allowApiSendingOnBehalfOfOthers &&
            lhs.allowApiSendingOnBehalfOfOthersMetadata == rhs.allowApiSendingOnBehalfOfOthersMetadata &&
            lhs.allowApiSequentialSigning == rhs.allowApiSequentialSigning &&
            lhs.allowApiSequentialSigningMetadata == rhs.allowApiSequentialSigningMetadata &&
            lhs.allowAutoTagging == rhs.allowAutoTagging &&
            lhs.allowAutoTaggingMetadata == rhs.allowAutoTaggingMetadata &&
            lhs.allowBulkSending == rhs.allowBulkSending &&
            lhs.allowBulkSendingMetadata == rhs.allowBulkSendingMetadata &&
            lhs.allowDocuSignDesktopClient == rhs.allowDocuSignDesktopClient &&
            lhs.allowDocuSignDesktopClientMetadata == rhs.allowDocuSignDesktopClientMetadata &&
            lhs.allowedAddressBookAccess == rhs.allowedAddressBookAccess &&
            lhs.allowedAddressBookAccessMetadata == rhs.allowedAddressBookAccessMetadata &&
            lhs.allowedClickwrapsAccess == rhs.allowedClickwrapsAccess &&
            lhs.allowedClickwrapsAccessMetadata == rhs.allowedClickwrapsAccessMetadata &&
            lhs.allowedTemplateAccess == rhs.allowedTemplateAccess &&
            lhs.allowedTemplateAccessMetadata == rhs.allowedTemplateAccessMetadata &&
            lhs.allowedToBeEnvelopeTransferRecipient == rhs.allowedToBeEnvelopeTransferRecipient &&
            lhs.allowedToBeEnvelopeTransferRecipientMetadata == rhs.allowedToBeEnvelopeTransferRecipientMetadata &&
            lhs.allowEnvelopeSending == rhs.allowEnvelopeSending &&
            lhs.allowEnvelopeSendingMetadata == rhs.allowEnvelopeSendingMetadata &&
            lhs.allowESealRecipients == rhs.allowESealRecipients &&
            lhs.allowESealRecipientsMetadata == rhs.allowESealRecipientsMetadata &&
            lhs.allowPowerFormsAdminToAccessAllPowerFormEnvelopes == rhs.allowPowerFormsAdminToAccessAllPowerFormEnvelopes &&
            lhs.allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata == rhs.allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata &&
            lhs.allowSendersToSetRecipientEmailLanguage == rhs.allowSendersToSetRecipientEmailLanguage &&
            lhs.allowSendersToSetRecipientEmailLanguageMetadata == rhs.allowSendersToSetRecipientEmailLanguageMetadata &&
            lhs.allowSignerAttachments == rhs.allowSignerAttachments &&
            lhs.allowSignerAttachmentsMetadata == rhs.allowSignerAttachmentsMetadata &&
            lhs.allowSupplementalDocuments == rhs.allowSupplementalDocuments &&
            lhs.allowSupplementalDocumentsMetadata == rhs.allowSupplementalDocumentsMetadata &&
            lhs.allowTaggingInSendAndCorrect == rhs.allowTaggingInSendAndCorrect &&
            lhs.allowTaggingInSendAndCorrectMetadata == rhs.allowTaggingInSendAndCorrectMetadata &&
            lhs.allowVaulting == rhs.allowVaulting &&
            lhs.allowVaultingMetadata == rhs.allowVaultingMetadata &&
            lhs.allowWetSigningOverride == rhs.allowWetSigningOverride &&
            lhs.allowWetSigningOverrideMetadata == rhs.allowWetSigningOverrideMetadata &&
            lhs.canCreateWorkspaces == rhs.canCreateWorkspaces &&
            lhs.canCreateWorkspacesMetadata == rhs.canCreateWorkspacesMetadata &&
            lhs.disableDocumentUpload == rhs.disableDocumentUpload &&
            lhs.disableDocumentUploadMetadata == rhs.disableDocumentUploadMetadata &&
            lhs.disableOtherActions == rhs.disableOtherActions &&
            lhs.disableOtherActionsMetadata == rhs.disableOtherActionsMetadata &&
            lhs.enableApiRequestLogging == rhs.enableApiRequestLogging &&
            lhs.enableApiRequestLoggingMetadata == rhs.enableApiRequestLoggingMetadata &&
            lhs.enableRecipientViewingNotifications == rhs.enableRecipientViewingNotifications &&
            lhs.enableRecipientViewingNotificationsMetadata == rhs.enableRecipientViewingNotificationsMetadata &&
            lhs.enableSequentialSigningInterface == rhs.enableSequentialSigningInterface &&
            lhs.enableSequentialSigningInterfaceMetadata == rhs.enableSequentialSigningInterfaceMetadata &&
            lhs.enableTransactionPointIntegration == rhs.enableTransactionPointIntegration &&
            lhs.enableTransactionPointIntegrationMetadata == rhs.enableTransactionPointIntegrationMetadata &&
            lhs.powerFormRole == rhs.powerFormRole &&
            lhs.powerFormRoleMetadata == rhs.powerFormRoleMetadata &&
            lhs.receiveCompletedSelfSignedDocumentsAsEmailLinks == rhs.receiveCompletedSelfSignedDocumentsAsEmailLinks &&
            lhs.receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata == rhs.receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata &&
            lhs.signingUiVersionMetadata == rhs.signingUiVersionMetadata &&
            lhs.supplementalDocumentsMustAccept == rhs.supplementalDocumentsMustAccept &&
            lhs.supplementalDocumentsMustAcceptMetadata == rhs.supplementalDocumentsMustAcceptMetadata &&
            lhs.supplementalDocumentsMustRead == rhs.supplementalDocumentsMustRead &&
            lhs.supplementalDocumentsMustReadMetadata == rhs.supplementalDocumentsMustReadMetadata &&
            lhs.supplementalDocumentsMustView == rhs.supplementalDocumentsMustView &&
            lhs.supplementalDocumentsMustViewMetadata == rhs.supplementalDocumentsMustViewMetadata &&
            lhs.useNewDocuSignExperienceInterface == rhs.useNewDocuSignExperienceInterface &&
            lhs.useNewDocuSignExperienceInterfaceMetadata == rhs.useNewDocuSignExperienceInterfaceMetadata &&
            lhs.useNewSendingInterface == rhs.useNewSendingInterface &&
            lhs.useNewSendingInterfaceMetadata == rhs.useNewSendingInterfaceMetadata &&
            lhs.vaultingMode == rhs.vaultingMode &&
            lhs.vaultingModeMetadata == rhs.vaultingModeMetadata
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(allowAccountManagement?.hashValue)
        hasher.combine(allowAccountManagementMetadata?.hashValue)
        hasher.combine(allowApiAccess?.hashValue)
        hasher.combine(allowApiAccessMetadata?.hashValue)
        hasher.combine(allowApiAccessToAccount?.hashValue)
        hasher.combine(allowApiAccessToAccountMetadata?.hashValue)
        hasher.combine(allowApiSendingOnBehalfOfOthers?.hashValue)
        hasher.combine(allowApiSendingOnBehalfOfOthersMetadata?.hashValue)
        hasher.combine(allowApiSequentialSigning?.hashValue)
        hasher.combine(allowApiSequentialSigningMetadata?.hashValue)
        hasher.combine(allowAutoTagging?.hashValue)
        hasher.combine(allowAutoTaggingMetadata?.hashValue)
        hasher.combine(allowBulkSending?.hashValue)
        hasher.combine(allowBulkSendingMetadata?.hashValue)
        hasher.combine(allowDocuSignDesktopClient?.hashValue)
        hasher.combine(allowDocuSignDesktopClientMetadata?.hashValue)
        hasher.combine(allowedAddressBookAccess?.hashValue)
        hasher.combine(allowedAddressBookAccessMetadata?.hashValue)
        hasher.combine(allowedClickwrapsAccess?.hashValue)
        hasher.combine(allowedClickwrapsAccessMetadata?.hashValue)
        hasher.combine(allowedTemplateAccess?.hashValue)
        hasher.combine(allowedTemplateAccessMetadata?.hashValue)
        hasher.combine(allowedToBeEnvelopeTransferRecipient?.hashValue)
        hasher.combine(allowedToBeEnvelopeTransferRecipientMetadata?.hashValue)
        hasher.combine(allowEnvelopeSending?.hashValue)
        hasher.combine(allowEnvelopeSendingMetadata?.hashValue)
        hasher.combine(allowESealRecipients?.hashValue)
        hasher.combine(allowESealRecipientsMetadata?.hashValue)
        hasher.combine(allowPowerFormsAdminToAccessAllPowerFormEnvelopes?.hashValue)
        hasher.combine(allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata?.hashValue)
        hasher.combine(allowSendersToSetRecipientEmailLanguage?.hashValue)
        hasher.combine(allowSendersToSetRecipientEmailLanguageMetadata?.hashValue)
        hasher.combine(allowSignerAttachments?.hashValue)
        hasher.combine(allowSignerAttachmentsMetadata?.hashValue)
        hasher.combine(allowSupplementalDocuments?.hashValue)
        hasher.combine(allowSupplementalDocumentsMetadata?.hashValue)
        hasher.combine(allowTaggingInSendAndCorrect?.hashValue)
        hasher.combine(allowTaggingInSendAndCorrectMetadata?.hashValue)
        hasher.combine(allowVaulting?.hashValue)
        hasher.combine(allowVaultingMetadata?.hashValue)
        hasher.combine(allowWetSigningOverride?.hashValue)
        hasher.combine(allowWetSigningOverrideMetadata?.hashValue)
        hasher.combine(canCreateWorkspaces?.hashValue)
        hasher.combine(canCreateWorkspacesMetadata?.hashValue)
        hasher.combine(disableDocumentUpload?.hashValue)
        hasher.combine(disableDocumentUploadMetadata?.hashValue)
        hasher.combine(disableOtherActions?.hashValue)
        hasher.combine(disableOtherActionsMetadata?.hashValue)
        hasher.combine(enableApiRequestLogging?.hashValue)
        hasher.combine(enableApiRequestLoggingMetadata?.hashValue)
        hasher.combine(enableRecipientViewingNotifications?.hashValue)
        hasher.combine(enableRecipientViewingNotificationsMetadata?.hashValue)
        hasher.combine(enableSequentialSigningInterface?.hashValue)
        hasher.combine(enableSequentialSigningInterfaceMetadata?.hashValue)
        hasher.combine(enableTransactionPointIntegration?.hashValue)
        hasher.combine(enableTransactionPointIntegrationMetadata?.hashValue)
        hasher.combine(powerFormRole?.hashValue)
        hasher.combine(powerFormRoleMetadata?.hashValue)
        hasher.combine(receiveCompletedSelfSignedDocumentsAsEmailLinks?.hashValue)
        hasher.combine(receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata?.hashValue)
        hasher.combine(signingUiVersionMetadata?.hashValue)
        hasher.combine(supplementalDocumentsMustAccept?.hashValue)
        hasher.combine(supplementalDocumentsMustAcceptMetadata?.hashValue)
        hasher.combine(supplementalDocumentsMustRead?.hashValue)
        hasher.combine(supplementalDocumentsMustReadMetadata?.hashValue)
        hasher.combine(supplementalDocumentsMustView?.hashValue)
        hasher.combine(supplementalDocumentsMustViewMetadata?.hashValue)
        hasher.combine(useNewDocuSignExperienceInterface?.hashValue)
        hasher.combine(useNewDocuSignExperienceInterfaceMetadata?.hashValue)
        hasher.combine(useNewSendingInterface?.hashValue)
        hasher.combine(useNewSendingInterfaceMetadata?.hashValue)
        hasher.combine(vaultingMode?.hashValue)
        hasher.combine(vaultingModeMetadata?.hashValue)
    }
}
