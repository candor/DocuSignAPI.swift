//
// BulkSendingListSummary.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/** This object contains basic information about a bulk send list. */
public final class BulkSendingListSummary: Content, Hashable {
    /** The GUID of the bulk send list. This property is created after you post a new bulk send list. */
    public var bulkSendListId: String?
    /** The GUID of the user who created the bulk send list. */
    public var createdByUser: String?
    /** The UTC DateTime that the bulk send list was created. */
    public var createdDate: String?
    /** The name of the bulk send list. */
    public var name: String?

    public init(bulkSendListId: String? = nil, createdByUser: String? = nil, createdDate: String? = nil, name: String? = nil) {
        self.bulkSendListId = bulkSendListId
        self.createdByUser = createdByUser
        self.createdDate = createdDate
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bulkSendListId
        case createdByUser
        case createdDate
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(bulkSendListId, forKey: .bulkSendListId)
        try container.encodeIfPresent(createdByUser, forKey: .createdByUser)
        try container.encodeIfPresent(createdDate, forKey: .createdDate)
        try container.encodeIfPresent(name, forKey: .name)
    }

    public static func == (lhs: BulkSendingListSummary, rhs: BulkSendingListSummary) -> Bool {
        lhs.bulkSendListId == rhs.bulkSendListId &&
            lhs.createdByUser == rhs.createdByUser &&
            lhs.createdDate == rhs.createdDate &&
            lhs.name == rhs.name
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(bulkSendListId?.hashValue)
        hasher.combine(createdByUser?.hashValue)
        hasher.combine(createdDate?.hashValue)
        hasher.combine(name?.hashValue)
    }
}
