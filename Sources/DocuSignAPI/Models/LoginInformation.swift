//
// LoginInformation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class LoginInformation: Content, Hashable {
    /** Contains a token that can be used for authentication in API calls instead of using the user name and password. */
    public var apiPassword: String?
    /** The list of accounts that authenticating user is a member of. */
    public var loginAccounts: [LoginAccount]?

    public init(apiPassword: String? = nil, loginAccounts: [LoginAccount]? = nil) {
        self.apiPassword = apiPassword
        self.loginAccounts = loginAccounts
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case apiPassword
        case loginAccounts
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(apiPassword, forKey: .apiPassword)
        try container.encodeIfPresent(loginAccounts, forKey: .loginAccounts)
    }

    public static func == (lhs: LoginInformation, rhs: LoginInformation) -> Bool {
        lhs.apiPassword == rhs.apiPassword &&
            lhs.loginAccounts == rhs.loginAccounts
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(apiPassword?.hashValue)
        hasher.combine(loginAccounts?.hashValue)
    }
}
