//
// BrandLogos.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/** Information about the logos associated with the brand. */
public final class BrandLogos: Content, Hashable {
    /** The URI for the logo that the brand uses in the header of email messages. */
    public var email: String?
    /** The URI for the brand's primary logo. */
    public var primary: String?
    /** The URI for the brand's secondary logo. */
    public var secondary: String?

    public init(email: String? = nil, primary: String? = nil, secondary: String? = nil) {
        self.email = email
        self.primary = primary
        self.secondary = secondary
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case email
        case primary
        case secondary
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(primary, forKey: .primary)
        try container.encodeIfPresent(secondary, forKey: .secondary)
    }

    public static func == (lhs: BrandLogos, rhs: BrandLogos) -> Bool {
        lhs.email == rhs.email &&
            lhs.primary == rhs.primary &&
            lhs.secondary == rhs.secondary
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(email?.hashValue)
        hasher.combine(primary?.hashValue)
        hasher.combine(secondary?.hashValue)
    }
}
