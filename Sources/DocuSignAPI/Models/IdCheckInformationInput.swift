//
// IdCheckInformationInput.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/** A complex element that contains input information related to a recipient ID check. */
public final class IdCheckInformationInput: Content, Hashable {
    public var addressInformationInput: AddressInformationInput?
    public var dobInformationInput: DobInformationInput?
    public var ssn4InformationInput: Ssn4InformationInput?
    public var ssn9InformationInput: Ssn9InformationInput?

    public init(addressInformationInput: AddressInformationInput? = nil, dobInformationInput: DobInformationInput? = nil, ssn4InformationInput: Ssn4InformationInput? = nil, ssn9InformationInput: Ssn9InformationInput? = nil) {
        self.addressInformationInput = addressInformationInput
        self.dobInformationInput = dobInformationInput
        self.ssn4InformationInput = ssn4InformationInput
        self.ssn9InformationInput = ssn9InformationInput
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case addressInformationInput
        case dobInformationInput
        case ssn4InformationInput
        case ssn9InformationInput
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(addressInformationInput, forKey: .addressInformationInput)
        try container.encodeIfPresent(dobInformationInput, forKey: .dobInformationInput)
        try container.encodeIfPresent(ssn4InformationInput, forKey: .ssn4InformationInput)
        try container.encodeIfPresent(ssn9InformationInput, forKey: .ssn9InformationInput)
    }

    public static func == (lhs: IdCheckInformationInput, rhs: IdCheckInformationInput) -> Bool {
        lhs.addressInformationInput == rhs.addressInformationInput &&
            lhs.dobInformationInput == rhs.dobInformationInput &&
            lhs.ssn4InformationInput == rhs.ssn4InformationInput &&
            lhs.ssn9InformationInput == rhs.ssn9InformationInput
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(addressInformationInput?.hashValue)
        hasher.combine(dobInformationInput?.hashValue)
        hasher.combine(ssn4InformationInput?.hashValue)
        hasher.combine(ssn9InformationInput?.hashValue)
    }
}
