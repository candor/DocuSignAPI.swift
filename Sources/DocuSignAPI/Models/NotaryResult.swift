//
// NotaryResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/** Describes a single notary jurisdiction. */
public final class NotaryResult: Content, Hashable {
    /**  */
    public var jurisdictions: [Jurisdiction]?
    public var notary: Notary?

    public init(jurisdictions: [Jurisdiction]? = nil, notary: Notary? = nil) {
        self.jurisdictions = jurisdictions
        self.notary = notary
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case jurisdictions
        case notary
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(jurisdictions, forKey: .jurisdictions)
        try container.encodeIfPresent(notary, forKey: .notary)
    }

    public static func == (lhs: NotaryResult, rhs: NotaryResult) -> Bool {
        lhs.jurisdictions == rhs.jurisdictions &&
            lhs.notary == rhs.notary
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(jurisdictions?.hashValue)
        hasher.combine(notary?.hashValue)
    }
}
