//
// ServiceVersion.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class ServiceVersion: Content, Hashable {
    /** The version of the rest API. */
    public var version: String?
    /**  */
    public var versionUrl: String?

    public init(version: String? = nil, versionUrl: String? = nil) {
        self.version = version
        self.versionUrl = versionUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case version
        case versionUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(version, forKey: .version)
        try container.encodeIfPresent(versionUrl, forKey: .versionUrl)
    }

    public static func == (lhs: ServiceVersion, rhs: ServiceVersion) -> Bool {
        lhs.version == rhs.version &&
            lhs.versionUrl == rhs.versionUrl
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(version?.hashValue)
        hasher.combine(versionUrl?.hashValue)
    }
}
