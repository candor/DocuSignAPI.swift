//
// PaymentProcessorInformation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class PaymentProcessorInformation: Content, Hashable {
    public var address: AddressInformation?
    /** The id of the billing agreement. */
    public var billingAgreementId: String?
    /** The email address associated with the payment processor. */
    public var email: String?

    public init(address: AddressInformation? = nil, billingAgreementId: String? = nil, email: String? = nil) {
        self.address = address
        self.billingAgreementId = billingAgreementId
        self.email = email
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case address
        case billingAgreementId
        case email
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(address, forKey: .address)
        try container.encodeIfPresent(billingAgreementId, forKey: .billingAgreementId)
        try container.encodeIfPresent(email, forKey: .email)
    }

    public static func == (lhs: PaymentProcessorInformation, rhs: PaymentProcessorInformation) -> Bool {
        lhs.address == rhs.address &&
            lhs.billingAgreementId == rhs.billingAgreementId &&
            lhs.email == rhs.email
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(address?.hashValue)
        hasher.combine(billingAgreementId?.hashValue)
        hasher.combine(email?.hashValue)
    }
}
