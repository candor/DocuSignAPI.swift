//
// AccountPasswordLockoutDurationMinutes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class AccountPasswordLockoutDurationMinutes: Content, Hashable {
    /**  */
    public var maximumMinutes: String?
    /**  */
    public var minimumMinutes: String?

    public init(maximumMinutes: String? = nil, minimumMinutes: String? = nil) {
        self.maximumMinutes = maximumMinutes
        self.minimumMinutes = minimumMinutes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case maximumMinutes
        case minimumMinutes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(maximumMinutes, forKey: .maximumMinutes)
        try container.encodeIfPresent(minimumMinutes, forKey: .minimumMinutes)
    }

    public static func == (lhs: AccountPasswordLockoutDurationMinutes, rhs: AccountPasswordLockoutDurationMinutes) -> Bool {
        lhs.maximumMinutes == rhs.maximumMinutes &&
            lhs.minimumMinutes == rhs.minimumMinutes
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(maximumMinutes?.hashValue)
        hasher.combine(minimumMinutes?.hashValue)
    }
}
