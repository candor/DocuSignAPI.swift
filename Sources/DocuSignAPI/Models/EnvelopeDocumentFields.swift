//
// EnvelopeDocumentFields.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/** Envelope document fields */
public final class EnvelopeDocumentFields: Content, Hashable {
    /** The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements:   * name - A string that can be a maximum of 50 characters.  * value - A string that can be a maximum of 200 characters.  *IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element.   */
    public var documentFields: [NameValue]?

    public init(documentFields: [NameValue]? = nil) {
        self.documentFields = documentFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case documentFields
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(documentFields, forKey: .documentFields)
    }

    public static func == (lhs: EnvelopeDocumentFields, rhs: EnvelopeDocumentFields) -> Bool {
        lhs.documentFields == rhs.documentFields
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(documentFields?.hashValue)
    }
}
