//
// SealIdentifier.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class SealIdentifier: Content, Hashable {
    /** The user-friendly display name for a seal. */
    public var sealDisplayName: String?
    /** The name of a seal. */
    public var sealName: String?

    public init(sealDisplayName: String? = nil, sealName: String? = nil) {
        self.sealDisplayName = sealDisplayName
        self.sealName = sealName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sealDisplayName
        case sealName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sealDisplayName, forKey: .sealDisplayName)
        try container.encodeIfPresent(sealName, forKey: .sealName)
    }

    public static func == (lhs: SealIdentifier, rhs: SealIdentifier) -> Bool {
        lhs.sealDisplayName == rhs.sealDisplayName &&
            lhs.sealName == rhs.sealName
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(sealDisplayName?.hashValue)
        hasher.combine(sealName?.hashValue)
    }
}
