//
// BillingDiscount.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/**  */
public final class BillingDiscount: Content, Hashable {
    /** Reserved: TBD */
    public var beginQuantity: String?
    /**  */
    public var discount: String?
    /**  */
    public var endQuantity: String?

    public init(beginQuantity: String? = nil, discount: String? = nil, endQuantity: String? = nil) {
        self.beginQuantity = beginQuantity
        self.discount = discount
        self.endQuantity = endQuantity
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case beginQuantity
        case discount
        case endQuantity
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(beginQuantity, forKey: .beginQuantity)
        try container.encodeIfPresent(discount, forKey: .discount)
        try container.encodeIfPresent(endQuantity, forKey: .endQuantity)
    }

    public static func == (lhs: BillingDiscount, rhs: BillingDiscount) -> Bool {
        lhs.beginQuantity == rhs.beginQuantity &&
            lhs.discount == rhs.discount &&
            lhs.endQuantity == rhs.endQuantity
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(beginQuantity?.hashValue)
        hasher.combine(discount?.hashValue)
        hasher.combine(endQuantity?.hashValue)
    }
}
