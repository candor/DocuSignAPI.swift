//
// EnvelopePurgeConfiguration.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/** Contains information about the current envelope purge configuration for an account, which enables account administrators to purge documents from completed and voided envelopes after a set number of days (&#x60;retentionDays&#x60;).  */
public final class EnvelopePurgeConfiguration: Content, Hashable {
    /** When set to **true**, purging is enabled. */
    public var purgeEnvelopes: String?
    /** When set to **true**, the system also redacts personally identifiable information (PII).  **Note**: To redact PII, you must also set the property `removeTabsAndEnvelopeAttachments` to **true**. */
    public var redactPII: String?
    /** When set to **true**, the system also purges the tabs and attachments associated with the envelopes.  */
    public var removeTabsAndEnvelopeAttachments: String?
    /** The number of days to retain envelope documents before purging them. This value must be a number between `0` and `999`. */
    public var retentionDays: String?

    public init(purgeEnvelopes: String? = nil, redactPII: String? = nil, removeTabsAndEnvelopeAttachments: String? = nil, retentionDays: String? = nil) {
        self.purgeEnvelopes = purgeEnvelopes
        self.redactPII = redactPII
        self.removeTabsAndEnvelopeAttachments = removeTabsAndEnvelopeAttachments
        self.retentionDays = retentionDays
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case purgeEnvelopes
        case redactPII
        case removeTabsAndEnvelopeAttachments
        case retentionDays
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(purgeEnvelopes, forKey: .purgeEnvelopes)
        try container.encodeIfPresent(redactPII, forKey: .redactPII)
        try container.encodeIfPresent(removeTabsAndEnvelopeAttachments, forKey: .removeTabsAndEnvelopeAttachments)
        try container.encodeIfPresent(retentionDays, forKey: .retentionDays)
    }

    public static func == (lhs: EnvelopePurgeConfiguration, rhs: EnvelopePurgeConfiguration) -> Bool {
        lhs.purgeEnvelopes == rhs.purgeEnvelopes &&
            lhs.redactPII == rhs.redactPII &&
            lhs.removeTabsAndEnvelopeAttachments == rhs.removeTabsAndEnvelopeAttachments &&
            lhs.retentionDays == rhs.retentionDays
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(purgeEnvelopes?.hashValue)
        hasher.combine(redactPII?.hashValue)
        hasher.combine(removeTabsAndEnvelopeAttachments?.hashValue)
        hasher.combine(retentionDays?.hashValue)
    }
}
