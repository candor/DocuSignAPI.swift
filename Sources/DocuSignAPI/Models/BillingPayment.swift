//
// BillingPayment.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/** Contains information on a billing plan. */
public final class BillingPayment: Content, Hashable {
    /** Reserved: TBD */
    public var amount: String?
    /** Reserved: TBD */
    public var invoiceId: String?
    /**  */
    public var paymentId: String?

    public init(amount: String? = nil, invoiceId: String? = nil, paymentId: String? = nil) {
        self.amount = amount
        self.invoiceId = invoiceId
        self.paymentId = paymentId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case amount
        case invoiceId
        case paymentId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(amount, forKey: .amount)
        try container.encodeIfPresent(invoiceId, forKey: .invoiceId)
        try container.encodeIfPresent(paymentId, forKey: .paymentId)
    }

    public static func == (lhs: BillingPayment, rhs: BillingPayment) -> Bool {
        lhs.amount == rhs.amount &&
            lhs.invoiceId == rhs.invoiceId &&
            lhs.paymentId == rhs.paymentId
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(amount?.hashValue)
        hasher.combine(invoiceId?.hashValue)
        hasher.combine(paymentId?.hashValue)
    }
}
