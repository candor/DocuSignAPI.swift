//
// TemplateDocumentVisibility.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import AnyCodable
import Foundation
import Vapor

/** Document Visibility enables senders to control the visibility of the documents in an envelope at the recipient level. For example, if the parties associated with a legal proceeding should have access to different documents, the Document Visibility feature enables you to keep all of the documents in the same envelope and set view permissions for the documents by recipient. This functionality is enabled for envelopes and templates. It is not available for PowerForms.  **Note**: Before you use Document Visibility, you should be aware of the following information:  - Document Visibility must be enabled for your account by your DocuSign administrator.  - A document cannot be hidden from a recipient if the recipient has tabs assigned to them on the document.  - When the Document Visibility setting hides a document from a recipient, the document also does not appear in the recipient&#39;s list of envelopes, documents, or page images. - Carbon Copy, Certified Delivery (Needs to Sign), Editor, and Agent recipients can always see all of the documents associated with the envelope or template.  The Document Visibility feature has multiple settings that specify the options that senders have when sending documents. For more information, see [Use Document Visibility to Control Recipient Access](https://support.docusign.com/en/guides/ndse-user-guide-document-visibility). */
public final class TemplateDocumentVisibility: Content, Hashable {
    /** An array of `documentVisibility` objects that specifies which documents are visible to which recipients. */
    public var documentVisibility: [DocumentVisibility]?

    public init(documentVisibility: [DocumentVisibility]? = nil) {
        self.documentVisibility = documentVisibility
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case documentVisibility
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(documentVisibility, forKey: .documentVisibility)
    }

    public static func == (lhs: TemplateDocumentVisibility, rhs: TemplateDocumentVisibility) -> Bool {
        lhs.documentVisibility == rhs.documentVisibility
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(documentVisibility?.hashValue)
    }
}
